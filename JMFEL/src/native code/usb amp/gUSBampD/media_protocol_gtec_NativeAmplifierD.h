/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class media_protocol_gtec_NativeAmplifierD */

#ifndef _Included_media_protocol_gtec_NativeAmplifierD
#define _Included_media_protocol_gtec_NativeAmplifierD
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getHeaderSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getHeaderSize
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getSizeOfFloat
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getSizeOfFloat
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getDriverVersion
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_media_protocol_gtec_NativeAmplifierD_getDriverVersion
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    probeDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_probeDevice
  (JNIEnv *, jobject, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    openDevice
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_openDevice__I
  (JNIEnv *, jobject, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    openDevice
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_openDevice__Ljava_lang_String_2
  (JNIEnv *, jobject, jstring);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    closeDevice
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_closeDevice
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getData
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getData
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setBufferSize
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setBufferSize
  (JNIEnv *, jobject, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setSampleRate
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setSampleRate
  (JNIEnv *, jobject, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    start
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_start
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    stop
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_stop
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setChannels
 * Signature: ([I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setChannels
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setDigitalOut
 * Signature: (IZ)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setDigitalOut
  (JNIEnv *, jobject, jint, jboolean);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getDigitalIO
 * Signature: ([Z[Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_getDigitalIO
  (JNIEnv *, jobject, jbooleanArray, jbooleanArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getLastError
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_media_protocol_gtec_NativeAmplifierD_getLastError
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getLastErrorCode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getLastErrorCode
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getLastErrorMessage
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_media_protocol_gtec_NativeAmplifierD_getLastErrorMessage
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    resetTransfer
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_resetTransfer
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getSerial
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_media_protocol_gtec_NativeAmplifierD_getSerial
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    enableTriggerLine
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_enableTriggerLine
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getImpedance
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_media_protocol_gtec_NativeAmplifierD_getImpedance
  (JNIEnv *, jobject, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    calibrate
 * Signature: ([F[F)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_calibrate
  (JNIEnv *, jobject, jfloatArray, jfloatArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setScale
 * Signature: ([F[F)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setScale
  (JNIEnv *, jobject, jfloatArray, jfloatArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getScale
 * Signature: ([F[F)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_getScale
  (JNIEnv *, jobject, jfloatArray, jfloatArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getFilterSpec
 * Signature: ([FI)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_getFilterSpec
  (JNIEnv *, jobject, jfloatArray, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getNumberOfFilters
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getNumberOfFilters
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setBandPass
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setBandPass
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getNotchFilterSpec
 * Signature: ([FI)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_getNotchFilterSpec
  (JNIEnv *, jobject, jfloatArray, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getNumberOfNotchFilters
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getNumberOfNotchFilters
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setNotch
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setNotch
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setMode
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setMode
  (JNIEnv *, jobject, jint);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_media_protocol_gtec_NativeAmplifierD_getMode
  (JNIEnv *, jobject);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setGround
 * Signature: ([Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setGround
  (JNIEnv *, jobject, jbooleanArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getGround
 * Signature: ([Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_getGround
  (JNIEnv *, jobject, jbooleanArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setReference
 * Signature: ([Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setReference
  (JNIEnv *, jobject, jbooleanArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    getReference
 * Signature: ([Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_getReference
  (JNIEnv *, jobject, jbooleanArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setBipolar
 * Signature: ([I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setBipolar
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setDRLChannel
 * Signature: ([I)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setDRLChannel
  (JNIEnv *, jobject, jintArray);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    enableSC
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_enableSC
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setSlave
 * Signature: (Z)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setSlave
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     media_protocol_gtec_NativeAmplifierD
 * Method:    setDAC
 * Signature: (BIII)Z
 */
JNIEXPORT jboolean JNICALL Java_media_protocol_gtec_NativeAmplifierD_setDAC
  (JNIEnv *, jobject, jbyte, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
